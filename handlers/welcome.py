from bot_settings import bot
import sqlite
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import random
from datetime import datetime


def register_welcome_handlers():
    # commands
    bot.register_message_handler(welcome, commands=['start'])
    bot.register_message_handler(welcome, commands=['menu'])
    bot.register_message_handler(list_variants, commands=['list'])
    # regexp
    bot.register_message_handler(send_products_keyboard, regexp='üì¶–¢–æ–≤–∞—Ä—ã')
    bot.register_message_handler(send_personal_area, regexp='üë©üèª‚ÄçüöÄ–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç')
    bot.register_message_handler(welcome, regexp='üîô–ù–∞–∑–∞–¥')
    bot.register_message_handler(send_manager, regexp='üí¨–ú–µ–Ω–µ–¥–∂–µ—Ä')
    # callback
    bot.register_callback_query_handler(send_user_id_and_names, lambda call: call.data.startswith('show_'))
    bot.register_callback_query_handler(send_products_keyboard_edit, lambda call: call.data.startswith('back_to_categories'))
    bot.register_callback_query_handler(delete_message, lambda call: call.data.startswith('back'))
    bot.register_callback_query_handler(send_products_list, lambda call: call.data.startswith('send_'))
    bot.register_callback_query_handler(send_product_info, lambda call: call.data.startswith('product_info_'))
    bot.register_callback_query_handler(send_order_process, lambda call: call.data.startswith('order_'))


def send_order_process(call):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —ç–∫–≤–∞–π—Ä–∏–Ω–≥
    model = call.data[6:]
    now = datetime.now()
    order_number = 1
    sqlite.insert_order_to_base(model, call.from_user.id, now, "–æ–ø–ª–∞—á–µ–Ω–æ", "–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ", order_number)
    sqlite.insert_order_to_orders_cache(order_number, call.from_user.id, "–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ")

    # bot.answer_callback_query(call.from_user.id, )
    bot.answer_callback_query(call.id, "–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ.", show_alert=True)
    bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)


def send_product_info(call):
    name = call.data[13:]
    description, price, image = sqlite.get_description_by_name(name)
    file = open(f'images/{image}', 'rb')
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text=f"–ö—É–ø–∏—Ç—å {price} ‚ÇΩ", callback_data=f"order_{name}"))
    markup.add(InlineKeyboardButton(text=f"–ù–∞–∑–∞–¥", callback_data=f"back_to_categories"))
    bot.send_photo(call.from_user.id, file, description, reply_markup=markup)


def send_products_list(call):
    category = call.data[5:]
    products = sqlite.get_products_by_category(category)
    markup = InlineKeyboardMarkup()
    for product in products:
        markup.add(InlineKeyboardButton(text=f"{product[0]}", callback_data=f'product_info_{product[0]}'))
    markup.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_categories'))
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=markup)


def send_products_keyboard_edit(call):
    send_products_keyboard(call, edit=True)


def send_products_keyboard(message, edit=False):
    image = open(f'images/{random.randint(1, 3)}.jpg', 'rb')
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text="Apple iPhone", callback_data="send_iphone"))
    markup.add(InlineKeyboardButton(text="Apple MacBook", callback_data="send_macbook"))
    markup.add(InlineKeyboardButton(text="Apple iPad", callback_data="send_ipad"))
    text = "STORE78: –¢–µ–ª–µ—Ñ–æ–Ω—ã, –ø–ª–∞–Ω—à–µ—Ç—ã, –Ω–æ—É—Ç–±—É–∫–∏, –∫–æ–º–ø—å—é—Ç–µ—Ä—ã, –∞—É–¥–∏–æ-–≤–∏–¥–µ–æ, –≥–∞–¥–∂–µ—Ç—ã, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã"
    if not edit:
        bot.send_photo(message.from_user.id, image, text, reply_markup=markup)
    else:
        bot.edit_message_reply_markup(chat_id=message.message.chat.id, message_id=message.message.message_id,
                                      reply_markup=markup)


def send_manager(message):
    text = '[–ù–∞–ø–∏—Å–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É](https://t.me/zkokorin)'
    bot.send_message(message.from_user.id, text, parse_mode='markdown')


def send_personal_area(message):
    # –ü–µ—Ä–µ–¥ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —á–µ—Ä–µ–∑ –≤–≤–æ–¥ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton(text="–ó–∞–∫–∞–∑—ã"), KeyboardButton(text="–í–æ–∑–≤—Ä–∞—Ç"), KeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É"))
    markup.add(KeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫"), KeyboardButton(text="üîô–ù–∞–∑–∞–¥"))
    bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç!", reply_markup=markup)


def delete_message(call):
    bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)


def welcome(message):
    sqlite.insert_user(message.from_user.id, message.from_user.first_name)
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton(text="üì¶–¢–æ–≤–∞—Ä—ã"), KeyboardButton(text="ü´•–û –Ω–∞—Å"), KeyboardButton(text="üí¨–ú–µ–Ω–µ–¥–∂–µ—Ä"))
    markup.add(KeyboardButton(text="üë©üèª‚ÄçüöÄ–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"))
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!", reply_markup=markup)


def list_variants(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text="user_id", callback_data='show_users_id'),
               InlineKeyboardButton(text="names", callback_data='show_names'))

    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç —Å–ø–∏—Å–∫–∞: ", reply_markup=markup)


def send_user_id_and_names(call):
    data = call.data[5:]
    user_data = sqlite.get_user_id_and_name()
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back'))
    text = f"*–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*\n"
    number = 1
    for user_id, name in user_data:
        if data == 'users_id':
            text += f"{number}) {str(user_id)}\n"
        elif data == 'names':
            text += f"{number}) {name}\n"
        number += 1
    bot.send_message(call.from_user.id, text, parse_mode='markdown', reply_markup=markup)

