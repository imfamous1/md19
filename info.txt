1) message_handler - декоратор, который применяется к функции, чтобы указать, что данная функция
должна обрабатывать входящие сообщения, соответствующие определенному критерию
2) .env - текстовый файл, который используется для хранения конфиденциальной информации
такой как токены, ключи, пароли
pip install python-dotenv
3) import os - модуль для работы с операционной системой
4) .venv, для активации:
source .venv/bin/activate - macos/linux
.\venv\Scripts\activate - windows
5) pip install pyTelegramBotApi - для установки телебота (библиотеки для работы с тг ботом)
6) requirements.txt - файл используется для управления зависимостями вашего проекта,
позволяя другим разработчикам или системам с легкостью устанавливать все необходимые библиотеки
pip freeze > requirements.txt
freeze - выдает список всех установленных библиотек в виртуальном окружении
pip install -r requirements.txt - команда терминала для получения тех же версий библиотек,
необходимых для проекта
7) README.md - обычно создается в формате markdown (.md), содержит всю информацию о проекте
Название проекта, Описание, Установка, Использование, Пожертвования, Лицензия
8) Декоратор - позволяет изменить или расширить поведение другой функции
def decorator(func):
    def wrapper():
        print("***")
        func()
        print("|||")
    return wrapper
@decorator
def say_hello():
    print("say_hello")
say_hello()
9) bot.register_message_handler() -
Объект бота, который регистрирует функцию как обработчик сообщений без использования декоратора.
Может быть полезен, когда нужно динамически добавлять или удалять обработчики или когда хотим явно контролировать
процесс регистрации обработчиков, а не полагаться на механизм декоратора.
10) sqlite3 - модуль в стандартной библиотеке python, который предоставляет интерфейс для работы с базами
данных SQLite. SQLite - легковесная дисковая база данных, не требующая отдельного серверного процесса.
https://sqlitestudio.pl/ - SQLiteStudio – программа для работы с БД
Есть еще вариант посерьезнее, DBeaver
11)  fetchone и fetchall - методы используемые в контексте sql-запросов через программные интерфейсы для работы
с базами данных, таких как Cursor в Python. Используются для извлечения результатов выполненных запросов.
fetchone - извлекает следующую строку результата
fetchall - извлекает все строки результата
12) emoji в pycharm:
(windows) win + . или win + ;
(macos) ctrl + command + space
13) regexp - регулярное выражение, как последовательность символов, формирующая шаблон поиска.
14) git - распределенная система управлениями версиями. Git позволяет разработчикам отслеживать и управлять изменениями
в коде или других наборах файлов. Особенно удобно при совместной работе.
github - веб-сервис на основе git для хостинга проектов, совместной работы, отслеживания ошибок и управлениям проектами.
Он предоставляет графический интерфейс для многих функций git.
15) import time
time.sleep(delay) - часть модуля time, используется для остановки (замораживания) выполнения текущего потока на
заданное количество секунд
16) Потоки - в программировании это средство позволяющее вашему приложению выполнять несколько задач одновременно в рамках
одного процесса. Основная идея многопоточности заключается в параллельной работе нескольких частей программы.
17) В Python многопоточность реализована через модуль threading, который предоставляет API для работы с потоками.
Многопоточное программирование позволяет вашему приложению выполнять несколько задач одновременно, что может быть особенно
полезно для задач, ограниченных ожиданием ввода-вывода, таких как запросы к сетевым ресурсам, операции с файлами или интерфейсы.
18) Aiogram - современная и лучшая библиотека для телеграм ботов на 28 марта 2024 года.
